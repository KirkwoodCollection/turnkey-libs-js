name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Use Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm run test:coverage
      
    - name: Build library
      run: npm run build
      
    - name: Verify no mock data in build
      run: npm run clear-mock-data
      
    - name: Generate changelog
      id: changelog
      run: |
        # Simple changelog generation (in production, use conventional-changelog or similar)
        echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
        git log --oneline --pretty=format:"- %s (%h)" $(git describe --tags --abbrev=0 HEAD^)..HEAD >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          ## Changes
          ${{ steps.changelog.outputs.CHANGELOG }}
          
          ## Installation
          ```bash
          npm install @turnkey/libs-js@${{ github.ref_name }}
          ```
          
          ## Bundle Sizes
          - UMD: ![](https://img.shields.io/bundlephobia/minzip/@turnkey/libs-js@${{ github.ref_name }})
          - Tree-shakeable ESM modules available
          
          ## ‚ö†Ô∏è Production Ready
          - All mock data has been stripped from this build
          - Includes TypeScript definitions
          - Supports Node.js 16+ and modern browsers
        draft: false
        prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
        
    - name: Upload build artifacts to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/umd/turnkey-libs.min.js
        asset_name: turnkey-libs.min.js
        asset_content_type: application/javascript

  publish:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: release
    if: "!contains(github.ref, 'alpha') && !contains(github.ref, 'beta')" # Only publish stable releases
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build library
      run: npm run build
      
    - name: Final mock data check
      run: |
        echo "üîç Final check for mock data before publishing..."
        npm run clear-mock-data
        
        # Double-check no mock files are in dist
        if find dist/ -name "*mock*" -o -name "*MOCK*" | grep -q .; then
          echo "‚ùå Mock files found in dist directory!"
          exit 1
        fi
        
        echo "‚úÖ Build is clean and ready for publication"
        
    - name: Publish to NPM
      run: npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  notify:
    name: Notify Team
    runs-on: ubuntu-latest
    needs: [release, publish]
    if: always()
    
    steps:
    - name: Notify on success
      if: needs.release.result == 'success' && needs.publish.result == 'success'
      run: |
        echo "üéâ Successfully released ${{ github.ref_name }}"
        echo "üì¶ Published to NPM: https://www.npmjs.com/package/@turnkey/libs-js"
        echo "üìñ GitHub Release: ${{ github.server_url }}/${{ github.repository }}/releases/tag/${{ github.ref_name }}"
        
    - name: Notify on failure
      if: needs.release.result == 'failure' || needs.publish.result == 'failure'
      run: |
        echo "‚ùå Release failed for ${{ github.ref_name }}"
        echo "Check the workflow logs for details"